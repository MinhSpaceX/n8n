# n8n environment variables
# Grouped by service for Docker Compose with PostgreSQL and Queue Mode

# --- n8n Core Application Settings ---
DOMAIN_NAME=localhost:5678 # Set your domain name here (e.g., your.n8n.instance.com)
N8N_EDITOR_BASE_URL=${DOMAIN_NAME}
WEBHOOK_URL=${DOMAIN_NAME} # IMPORTANT: Set this to your public n8n webhook URL if behind a reverse proxy!
N8N_HOST=localhost
N8N_PORT=5678
N8N_LISTEN_ADDRESS=0.0.0.0
N8N_PROTOCOL=http
N8N_ENCRYPTION_KEY=TOBEFILLED # IMPORTANT: Set a strong, unique key for production!
N8N_USER_FOLDER=user-folder
N8N_PUSH_BACKEND=websocket
CREDENTIALS_DEFAULT_NAME=My credentials
N8N_ONBOARDING_FLOW_DISABLED=false
N8N_WORKFLOW_ACTIVATION_BATCH_SIZE=1
N8N_WORKFLOW_CALLER_POLICY_DEFAULT_OPTION=workflowsFromSameOwner
N8N_WORKFLOW_TAGS_DISABLED=false
WORKFLOWS_DEFAULT_NAME=My workflow
N8N_BLOCK_ENV_ACCESS_IN_NODE=true # Blocked for enhanced security.
N8N_BLOCK_FILE_ACCESS_TO_N8N_FILES=true
N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true # Enforce 0600 permissions for settings file.
N8N_SECURITY_AUDIT_DAYS_ABANDONED_WORKFLOW=90
N8N_SECURE_COOKIE=true
N8N_SAMESITE_COOKIE=lax
NODE_FUNCTION_ALLOW_BUILTIN= # Leave blank to disable importing built-in Node.js modules in the Code node for enhanced security.
NODE_FUNCTION_ALLOW_EXTERNAL= # Leave blank to disable importing external Node.js packages in the Code node for enhanced security.
N8N_DIAGNOSTICS_ENABLED=false # Telemetry disabled
N8N_DIAGNOSTICS_CONFIG_FRONTEND= # Left blank because N8N_DIAGNOSTICS_ENABLED is false.
N8N_DIAGNOSTICS_CONFIG_BACKEND= # Left blank because N8N_DIAGNOSTICS_ENABLED is false.
GENERIC_TIMEZONE=Asia/Ho_Chi_Minh # Set to Vietnam's timezone
N8N_DEFAULT_LOCALE=en

# --- PostgreSQL Database Settings ---
DB_TYPE=postgres
DB_POSTGRESDB_DATABASE=n8n
DB_POSTGRESDB_HOST=db # Or your PostgreSQL service name in Docker Compose
DB_POSTGRESDB_PORT=5432
DB_POSTGRESDB_USER=postgres
DB_POSTGRESDB_PASSWORD=password123 # IMPORTANT: Set a strong password for production!
DB_POSTGRESDB_POOL_SIZE=2
DB_POSTGRESDB_CONNECTION_TIMEOUT=20000
DB_POSTGRESDB_IDLE_CONNECTION_TIMEOUT=30000
DB_POSTGRESDB_SCHEMA=public
DB_POSTGRESDB_SSL_ENABLED=false
DB_POSTGRESDB_SSL_REJECT_UNAUTHORIZED=true
DB_PING_INTERVAL_SECONDS=2
DB_LOGGING_ENABLED=false
DB_LOGGING_OPTIONS=error
DB_LOGGING_MAX_EXECUTION_TIME=1000

# --- Redis Queue Settings ---
EXECUTIONS_MODE=queue
QUEUE_BULL_REDIS_HOST=redis # Or your Redis service name in Docker Compose
QUEUE_BULL_REDIS_PORT=6379
QUEUE_BULL_REDIS_DB=0
QUEUE_BULL_REDIS_USERNAME=n8n_redis
QUEUE_BULL_REDIS_PASSWORD=password123 # IMPORTANT: Set a strong password for production Redis!
QUEUE_BULL_REDIS_TIMEOUT_THRESHOLD=10000
QUEUE_BULL_REDIS_TLS=false
QUEUE_BULL_REDIS_DUALSTACK=false
QUEUE_WORKER_LOCK_DURATION=30000
QUEUE_WORKER_LOCK_RENEW_TIME=15000
QUEUE_WORKER_STALLED_INTERVAL=30000
QUEUE_WORKER_MAX_STALLED_COUNT=1

# --- Binary Data Storage Settings ---
N8N_AVAILABLE_BINARY_DATA_MODES=filesystem
N8N_BINARY_DATA_STORAGE_PATH=./binaryData
N8N_DEFAULT_BINARY_DATA_MODE=filesystem

# --- Endpoint Settings ---
N8N_PAYLOAD_SIZE_MAX=16
N8N_FORMDATA_FILE_SIZE_MAX=200
N8N_ENDPOINT_REST=rest
N8N_ENDPOINT_WEBHOOK=webhook
N8N_ENDPOINT_WEBHOOK_TEST=webhook-test
N8N_ENDPOINT_WEBHOOK_WAIT=webhook-waiting
N8N_DISABLE_PRODUCTION_MAIN_PROCESS=false

# --- Execution Management Settings ---
EXECUTIONS_TIMEOUT=-1
EXECUTIONS_TIMEOUT_MAX=3600
EXECUTIONS_DATA_SAVE_ON_ERROR=all
EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
EXECUTIONS_DATA_SAVE_ON_PROGRESS=false
EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS=true
EXECUTIONS_DATA_PRUNE=true
EXECUTIONS_DATA_MAX_AGE=336
EXECUTIONS_DATA_PRUNE_MAX_COUNT=10000
EXECUTIONS_DATA_HARD_DELETE_BUFFER=1
EXECUTIONS_DATA_PRUNE_HARD_DELETE_INTERVAL=15
EXECUTIONS_DATA_PRUNE_SOFT_DELETE_INTERVAL=60
N8N_CONCURRENCY_PRODUCTION_LIMIT=-1

# --- Logging Settings ---
N8N_LOG_LEVEL=info
N8N_LOG_OUTPUT=console
N8N_LOG_FORMAT=text
